title: |-
  GitLab status
summary: |
  Update commit status for GitLab repositories
description: |
  Update commit status for GitLab repositories
website: https://github.com/bitrise-steplib/steps-gitlab-status
source_code_url: https://github.com/bitrise-steplib/steps-gitlab-status
support_url: https://github.com/bitrise-steplib/steps-gitlab-status/issues
type_tags:
  - utility
is_requires_admin_user: false
is_always_run: true
is_skippable: true
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-gitlab-status
inputs:
  - api_base_url: ""
    opts:
      title: "GitLab API base url"
      summary: ""
      description: |-
        API URL for GitLab or GitLab Enterprise

        Example: "https://gitlab.example.com/api/v4"
      is_required: true
  - private_token: ""
    opts:
      title: "GitLab private token"
      summary: ""
      description: |-
        Authorization token for GitLab applications

        Generating a personal access token:
        1. Log in to your GitLab instance
        2. Go to User Settings > Access Tokens
        3. Pick a _name_ and set a _scope_ for the token
        4. Click on **Create personal access token** and save your new token
      is_required: true
  - repository_url: "$GIT_REPOSITORY_URL"
    opts:
      title: "Repository URL"
      summary: ""
      description: |-
        The URL for the repository we are working with
      is_required: true
  - commit_hash: "$BITRISE_GIT_COMMIT"
    opts:
      title: "Commit hash"
      summary: ""
      description: |-
        The commit hash for the commit we are working with
      is_required: true
  - target_url: "$BITRISE_BUILD_URL"
    opts:
      title: "Target URL"
      summary: ""
      description: |-
        The target URL to associate with this status.
        This URL will be linked from the GitLab UI to allow users to easily see the source of the status.
  - context: "Bitrise"
    opts:
      title: "Context"
      summary: "The Identifier to be used for this status"
      description: |-
        A string label to differentiate this status from the status of other systems.
        Default: `default`
  - preset_status: "auto"
    opts:
      title: "Set Specific Status"
      summary: ""
      description: |-
        If set, this step will set a specific status instead of reporting the current build status.
        
        Can be one of auto, pending, running, success, failed or canceled.
        If you select `auto` the step will send `success` status if the current build status is success (no step failed previously)
        and `failed` status if the build previously failed.
      value_options:
      - "auto"
      - "pending"
      - "running"
      - "success"
      - "failed"
      - "canceled"
  - description:
    opts:
      title: "Description"
      summary: "A short description of the status."
      description: |-
        The short description of the status.

        If leaved empty, it will be the status of the build.
