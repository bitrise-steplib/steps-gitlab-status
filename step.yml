title: GitLab Status
summary: Update commit status for GitLab repositories.
description: |- 
  This Step updates the commit status for a GitLab repository (repo) of your choice with this build's status. Useful anytime you can not or do not want to provide Bitrise write access to your git repo.
  
  ### Configuring the Step
  
  1. The **GitLab API base URL** should be `https://gitlab.com/api/v4/` for cloud-hosted GitLabs. 
  2. In the **GitLab private token** Step input, you need to provide an access token you generated in your Project Settings or User Settings on GitLab.
  3. The **Repository URL** input is populated automatically with a variable the value of which is taken from the repository field of the Settings of your app.
  4. You can also select a specific branch or tag to post the status to, but it's going to be sent to the default branch unless you change it.
  5. The **Commit hash** input is filled in by default with the variable inherited from the **Git Clone** Step.
  6. The **Target URL** Step input is the URL of the build, which is forwarded to GitHub as the source of the status.
  7. The **Context** Step input, allows you to label the status with a name.
  8. The input **Set Specific Status** input has a default value of `auto` which reflects the status of the build, but this input allows you to update the commit with any given status, regardless of the outcome of the build.
  9. The **Description** input allows you to provide a short description for the status. 
  10. Code **Coverage** percent can also be sent from the build to the commit. 
 

  ### Troubleshooting
  
  If you get a 404 response when running the Step, check your token's scope and validity.
  If you use GitLab Enterprise, make sure your API base URL is set to `https://gitlab.local.domain/api/v4`.
  If you do not see your status being reflected, double-check **Repository URL** and **Commit hash** input values. 
  
  ### Useful links
 
  - [Gitlab project access tokens](https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html)
  - [GitLab personal access tokens](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html)
 
  ### Related Steps
 
  - [Git-Clone](https://www.bitrise.io/integrations/steps/git-clone)
  - [Build Status Change](https://www.bitrise.io/integrations/steps/build-status-change)
  
website: https://github.com/bitrise-steplib/steps-gitlab-status
source_code_url: https://github.com/bitrise-steplib/steps-gitlab-status
support_url: https://github.com/bitrise-steplib/steps-gitlab-status/issues
type_tags:
  - utility
is_requires_admin_user: false
is_always_run: true
is_skippable: true
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-gitlab-status
inputs:
  - api_base_url: ""
    opts:
      title: "GitLab API base url"
      summary: ""
      description: |-
        API URL for GitLab or GitLab Enterprise

        Example: "https://gitlab.example.com/api/v4"
      is_required: true
  - private_token: ""
    opts:
      title: "GitLab private token"
      summary: ""
      description: |-
        Authorization token for GitLab applications

        Generating a project access token:
        1. Log in to your GitLab instance.
        2. Go to Project -> Settings > Access Tokens.
        3. Pick a _name_ and set a _scope_ for the token.
        4. Click on **Add new token** and save your new token.

        Alternatively generating a personal access token:
        1. Log in to your GitLab instance.
        2. Go to User Settings > Access Tokens.
        3. Pick a _name_ and set a _scope_ for the token.
        4. Click on **Create personal access token** and save your new token.
      is_required: true
      is_sensitive: true
  - repository_url: "$GIT_REPOSITORY_URL"
    opts:
      title: "Repository URL"
      summary: ""
      description: |-
        The URL for the repository we are working with
      is_required: true
  - git_ref: "$BITRISE_GIT_BRANCH"
    opts:
      title: "The name of a repository branch or tag or, if not given, the default branch"
      summary: ""
      description: |-
        The name of a repository branch or tag for which the status needs to be reported

        In case of a same commit hash on multiple branches, _ref_  will be used so the pipeline status is updated on the correct branch.
      is_required: true
  - commit_hash: "$BITRISE_GIT_COMMIT"
    opts:
      title: "Commit hash"
      summary: ""
      description: |-
        The commit hash for the commit we are working with
      is_required: true
  - target_url: "$BITRISE_BUILD_URL"
    opts:
      title: "Target URL"
      summary: ""
      description: |-
        The target URL to associate with this status.
        This URL will be linked from the GitLab UI to allow users to easily see the source of the status.
  - context: "Bitrise"
    opts:
      title: "Context"
      summary: "The Identifier to be used for this status"
      description: |-
        A string label to differentiate this status from the status of other systems.

        If left empty, it will be `default`.
  - preset_status: "auto"
    opts:
      title: "Set Specific Status"
      summary: ""
      description: |-
        If set, this Step will set a specific status instead of reporting the current build status.
        
        Can be one of `auto`, `pending`, `running`, `success`, `failed` or `canceled`.
        If you select `auto`, the Step will send `success` status if the current build status is `success` 
        (no Step failed previously) and `failed` status if the build previously failed.
      value_options:
      - "auto"
      - "pending"
      - "running"
      - "success"
      - "failed"
      - "canceled"
  - description:
    opts:
      title: "Description"
      summary: "A short description of the status."
      description: |-
        The short description of the status.

        If left empty, it will be the status of the build.
  - coverage:
    opts:
      title: "Coverage"
      summary: "Test coverage"
      description: |-
        The test coverage.

        Must be a floating point number between 0.0 and 100.0.
      is_required: false
