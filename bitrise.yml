format_version: 4
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - BITRISE_STEP_ID: gitlab-status
  - BITRISE_STEP_VERSION: "0.9.3"
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

  # define in .bitrise.secrets.yml
  - GITLAB_PRIVATE_TOKEN: $GITLAB_PRIVATE_TOKEN

workflows:
  test:
    before_run:
    - go-tests
    after_run:
    - _test_success
    - _test_failed
    - _test_no_commit_hash

  _test_success:
    steps:
    - path::./:
        title: Test success status
        inputs:
        - api_base_url: "https://gitlab.com/api/v4"
        - private_token: "$GITLAB_PRIVATE_TOKEN"
        - repository_url: "$GIT_REPOSITORY_URL_TEST"
        - commit_hash: "$BITRISE_GIT_COMMIT_TEST"
        - description: "Step test"
        - target_url: "https://bitrise.io"

  _test_failed:
    steps:
    - path::./:
        title: Test failed status
        inputs:
        - api_base_url: "https://gitlab.com/api/v4"
        - private_token: "$GITLAB_PRIVATE_TOKEN"
        - repository_url: "$GIT_REPOSITORY_URL_TEST"
        - commit_hash: "$BITRISE_GIT_COMMIT_TEST"
        - description: "Step test"
        - target_url: "https://bitrise.io"
        - preset_status: failed

  _test_no_commit_hash:
    steps:
    - path::./:
        title: Test no commit hash specified
        inputs:
        - api_base_url: "https://gitlab.com/api/v4"
        - private_token: "$GITLAB_PRIVATE_TOKEN"
        - repository_url: "$GIT_REPOSITORY_URL_TEST"
        - commit_hash:

  go-tests:
    before_run:
    - _install-test-tools
    steps:
    - script:
        title: Export go files to test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            no_vendor_paths="$(go list ./... | grep -v vendor)"
            envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
    - script:
        title: Err check
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: Go lint
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            while read -r line; do
              echo "-> Linting: $line"
              golint_out="$(golint $line)"
              if [[ "${golint_out}" != "" ]] ; then
                echo "=> Golint issues found:"
                echo "${golint_out}"
                exit 1
              fi
            done <<< "$GOLIST_WITHOUT_VENDOR"
    - script:
        title: Go test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            go test ./...

  _install-test-tools:
    steps:
    - script:
        title: Install required testing tools
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            # Check for unhandled errors
            go get -u -v github.com/kisielk/errcheck

            # Go lint
            go get -u -v github.com/golang/lint/golint

  # ----------------------------------------------------------------
  # --- workflows to create Release
  create-release:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -e

            export CI=true
            releaseman create --version $BITRISE_STEP_VERSION

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - BITRISE_STEP_ID: $BITRISE_STEP_ID
      - BITRISE_STEP_VERSION: $BITRISE_STEP_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-gitlab-status.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `BITRISE_STEP_ID` and `BITRISE_STEP_VERSION`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c "${MY_STEPLIB_REPO_FORK_GIT_URL}"
            bitrise share create --stepid "${BITRISE_STEP_ID}" --tag "${BITRISE_STEP_VERSION}" --git "${STEP_GIT_CLONE_URL}"
            bitrise share finish
